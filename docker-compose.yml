services:
  # MongoDB Database
  db:
    image: mongo:7-jammy
    container_name: storyweb_mongo_db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: "Dh@201200"
      MONGO_INITDB_DATABASE: story_db
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./logs:/var/log/mongodb
    networks:
      - storyweb-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # API Application
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: storyweb_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://root:Dh%40201200@db:27017/story_db?authSource=admin
      PORT: 3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - storyweb-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: storyweb_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - storyweb-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  storyweb-network:
    driver: bridge