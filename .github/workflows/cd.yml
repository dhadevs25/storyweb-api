name: 🚀 CD - Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["🔍 CI - Test & Build"]
    types:
      - completed
    branches: [ main ]

env:
  NODE_VERSION: '18'

# Grant GITHUB_TOKEN permissions
permissions:
  contents: write      # Create releases
  packages: write      # Push to GitHub Container Registry
  actions: read        # Read workflow information

jobs:
  deploy-staging:
    name: 🚧 Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    environment: staging
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔧 Build application
        run: npm run build
        
      - name: 🧪 Run tests
        run: npm test
        
      - name: 🏗️ Deploy to staging
        run: |
          echo "🚧 Deploying to staging environment..."
          echo "📦 Application built successfully"
          echo "🌐 Staging URL: https://staging.your-domain.com"
          # Add your staging deployment commands here
          
      - name: 📢 Staging notification
        run: |
          echo "✅ Staging deployment completed!"
          echo "🔗 Staging URL: https://staging.your-domain.com"

  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
        
      - name: 🏷️ Create release tag
        id: tag
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d')-${GITHUB_SHA:0:7}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "::set-output name=tag::$TAG_NAME"
          
      - name: 📋 Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          body: |
            🚀 **Production Release**
            
            **Changes:**
            - Automated deployment from commit ${{ github.sha }}
            
            **Deployment Info:**
            - Build Date: $(date +'%Y-%m-%d %H:%M:%S')
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
            
      - name: 🚀 Deploy to production
        run: |
          echo "🚀 Deploying to production environment..."
          echo "🏷️ Release tag: ${{ env.TAG_NAME }}"
          # Add your production deployment commands here
          
      - name: 📢 Deployment notification
        run: |
          echo "🎉 Production deployment completed!"
          echo "🏷️ Release tag: ${{ env.TAG_NAME }}"
          echo "🔗 Production URL: https://your-domain.com"

  docker-build:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
        
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: ✅ Push summary
        run: |
          echo "🐳 Docker image pushed successfully!"
          echo "🏷️ Tags:"
          echo "  - ghcr.io/${{ github.repository }}:latest"
          echo "  - ghcr.io/${{ github.repository }}:${{ github.sha }}"
          echo "🔗 GitHub Container Registry: https://github.com/${{ github.repository }}/pkgs/container/storyweb-api"